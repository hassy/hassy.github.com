
(function(){"use strict";var root=this
function LocacheCache(options){for(var key in options){if(options.hasOwnProperty(key)){this[key]=options[key]}}}
var locache=new LocacheCache()
root.locache=locache
LocacheCache.prototype.VERSION="0.2.0"
LocacheCache.prototype.supportsLocalStorage=(function(){try{var test_val="___locache___"
window.localStorage.setItem(test_val,test_val)
window.localStorage.getItem(test_val)
window.localStorage.removeItem(test_val)
return true}catch(e){return false}})()
LocacheCache.prototype.supportsSessionStorage=(function(){try{var test_val="___locache___"
window.sessionStorage.setItem(test_val,test_val)
window.sessionStorage.getItem(test_val)
window.sessionStorage.removeItem(test_val)
return true}catch(e){return false}})()
LocacheCache.prototype.supportsNativeJSON=!!window.JSON
LocacheCache.prototype.cachePrefix='___locache___'
LocacheCache.prototype.expirePrefix='___locacheExpire___'
LocacheCache.prototype.backends={local:{set:function(key,value){return window.localStorage.setItem(key,value)},get:function(key,value){return window.localStorage.getItem(key)},remove:function(key){return window.localStorage.removeItem(key)},length:function(key){return window.localStorage.length},key:function(index){if(index<0||index>=this.length()){return}
return window.localStorage.key(index)},enabled:function(){return locache.supportsLocalStorage}},session:{set:function(key,value){return window.sessionStorage.setItem(key,value)},get:function(key,value){return window.sessionStorage.getItem(key)},remove:function(key){return window.sessionStorage.removeItem(key)},length:function(key){return window.sessionStorage.length},key:function(index){if(index<0||index>=this.length()){return}
return window.sessionStorage.key(index)},enabled:function(){return locache.supportsSessionStorage}}}
LocacheCache.prototype.storage=locache.backends.local
var _currentTime=function(){return new Date().getTime()}
LocacheCache.prototype.key=function(key){return this.cachePrefix+key}
LocacheCache.prototype.expirekey=function(key){return this.expirePrefix+key}
LocacheCache.prototype.hasExpired=function(key){var expireKey=this.expirekey(key)
var expireValue=parseInt(this.storage.get(expireKey),10)
if(expireValue&&expireValue<_currentTime()){return true}
return false}
LocacheCache.prototype.set=function(key,value,seconds){if(!this.storage.enabled()||!key)return
var expireKey=this.expirekey(key)
var valueKey=this.key(key)
if(seconds){var ms=seconds*1000
this.storage.set(expireKey,_currentTime()+ms)}
value=JSON.stringify(value)
this.storage.set(valueKey,value)}
LocacheCache.prototype.get=function(key){if(!this.storage.enabled()||!key)return null
if(this.hasExpired(key)){this.remove(this.key(key))
return null}
var valueKey=this.key(key)
var value=this.storage.get(valueKey)
if(value){try{return JSON.parse(value)}catch(err){return null}}
return value}
LocacheCache.prototype.remove=function(key){if(!this.storage.enabled())return
var expireKey=this.expirekey(key)
var valueKey=this.key(key)
this.storage.remove(expireKey)
this.storage.remove(valueKey)}
LocacheCache.prototype.incr=function(key){if(!this.storage.enabled())return
var current=parseInt(this.get(key),10)
if(!current){current=0}
current++
this.set(key,current)
return current}
LocacheCache.prototype.decr=function(key){if(!this.storage.enabled())return
var current=parseInt(this.get(key),10)
if(!current){current=0}
current--
this.set(key,current)
return current}
LocacheCache.prototype.setMany=function(properties,seconds){if(!this.storage.enabled())return
for(var key in properties){if(properties.hasOwnProperty(key)){this.set(key,properties[key],seconds)}}}
LocacheCache.prototype.getMany=function(keys){var results={}
for(var i=0;i<keys.length;i++){if(this.storage.enabled()){results[keys[i]]=this.get(keys[i])}else{results[keys[i]]=null}}
return results}
LocacheCache.prototype.getManyValues=function(keys){var results=[]
for(var i=0;i<keys.length;i++){if(this.storage.enabled()){results.push(this.get(keys[i]))}else{results.push(null)}}
return results}
LocacheCache.prototype.removeMany=function(keys){if(!this.storage.enabled())return
for(var i=0;i<keys.length;i++){this.remove(keys[i])}}
LocacheCache.prototype.flush=function(){if(!this.storage.enabled())return
var length=this.storage.length()
var prefix=this.cachePrefix
for(var i=0;i<length;i++){var key=this.storage.key(i)
if(key&&key.indexOf(prefix)===0)this.storage.remove(key)}}
LocacheCache.prototype.length=function(){if(!this.storage.enabled())return 0
var c=0
var length=this.storage.length()
var prefix=this.cachePrefix
for(var i=0;i<length;i++){if(this.storage.key(i).indexOf(prefix)===0)c++}
return c}
LocacheCache.prototype.cleanup=function(){if(!this.storage.enabled())return
var length=this.storage.length()
var prefix=this.cachePrefix
for(var i=0;i<length;i++){var key=this.storage.key(i)
if(key&&key.indexOf(prefix)===0){var actualKey=key.substring(prefix.length,key.length)
if(this.hasExpired(actualKey)){this.remove(actualKey)}}}}
LocacheCache.prototype.createCache=function(options){return new LocacheCache(options)}
locache.session=new LocacheCache({storage:locache.backends.session})}).call(this);